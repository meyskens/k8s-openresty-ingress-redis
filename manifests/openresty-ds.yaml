---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openresty-ingress-controller
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: openresty-ingress-controller
  labels:
    k8s-app: openresty-ingress
spec:
  selector:
    matchLabels:
      k8s-app: openresty-ingress
      name: openresty-ingress
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: openresty-ingress
        name: openresty-ingress
    spec:
      serviceAccountName: openresty-ingress-controller
      # hostNetwork: true
      restartPolicy: Always
      containers:
      - image: redis:6
        name: redis
        ports:
        - name: redis
          containerPort: 6379
      - image: maartje/k8s-openresty-ingress-redis:dev
        imagePullPolicy: Always
        name: openresty-ingress
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        livenessProbe:
          httpGet:
            path: /health_check
            port: 80
            httpHeaders:
              - name: Host
                value: k8s-internal
          initialDelaySeconds: 15
          timeoutSeconds: 5
        resources:
          limits:
            memory: 512Mi
            cpu: 1
          requests:
            memory: 56Mi
            cpu: 200m

---
kind: Service
apiVersion: v1
metadata:
  name: openresty-ingress-service
spec:
  selector:
    k8s-app: openresty-ingress
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: https
  type: NodePort
---
---
kind: Service
apiVersion: v1
metadata:
  name: openresty-ingress-service-lb
spec:
  selector:
    k8s-app: openresty-ingress
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: https
  type: LoadBalancer
